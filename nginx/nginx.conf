server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443;
    server_name _;

    ssl_certificate     /synapse_data/localhost.tls.crt;
    ssl_certificate_key /synapse_data/localhost.tls.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_pass_request_headers on;

    location / {
        access_log /var/log/nginx/access_app.log;
        error_log /var/log/nginx/error_app.log;
        proxy_pass http://web:80;
    }

    location ~* ^(\/_matrix|\/_synapse\/client) {
        proxy_pass https://synapse:8448;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # Nginx by default only allows file uploads up to 1M in size
        # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml
        client_max_body_size 50M;
    }

    location ~* ^(\/_synapse\/admin) {
        allow 100.64.0.0/10;  # Tailscale
        allow 127.0.0.1;  # Localhost
        deny all;

        # Add CORS headers for synapse-admin
        if ($request_method = 'OPTIONS') {
            more_set_headers 'Access-Control-Allow-Origin: *';
            more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, OPTIONS';
            # Custom headers and headers various browsers *should* be OK with but aren't
            more_set_headers 'Access-Control-Allow-Headers: DNT,Authorization,Request,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            # Tell client that this pre-flight info is valid for 20 days
            more_set_headers 'Access-Control-Max-Age: 1728000';
            more_set_headers 'Content-Type: text/plain; charset=utf-8';
            more_set_headers 'Content-Length: 0';
            return 204;
        }
        if ($request_method = 'POST') {
            more_set_headers 'Access-Control-Allow-Origin: *';
            more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, OPTIONS';
            more_set_headers 'Access-Control-Allow-Headers: DNT,Authorization,Request,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            more_set_headers 'Access-Control-Expose-Headers: Content-Length,Content-Range';
        }
        if ($request_method = 'PUT') {
            more_set_headers 'Access-Control-Allow-Origin: *';
            more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, OPTIONS';
            more_set_headers 'Access-Control-Allow-Headers: DNT,Authorization,Request,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            more_set_headers 'Access-Control-Expose-Headers: Content-Length,Content-Range';
        }
        if ($request_method = 'GET') {
            more_set_headers 'Access-Control-Allow-Origin: *';
            more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, OPTIONS';
            more_set_headers 'Access-Control-Allow-Headers: DNT,Authorization,Request,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            more_set_headers 'Access-Control-Expose-Headers: Content-Length,Content-Range';
        }
        proxy_pass https://synapse:8448;
        
        # Nginx by default only allows file uploads up to 1M in size
        # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml
        client_max_body_size 50M;
    }
}